---
import BaseLayout from "./BaseLayout.astro";

const { frontmatter } = Astro.props;
const {
	title,
	description,
	pubDate,
	author = "Fitra",
	minutesRead,
	image,
	tags = [],
} = frontmatter;

// Format the date
const formattedDate = new Date(pubDate).toLocaleDateString("en-US", {
	year: "numeric",
	month: "long",
	day: "numeric",
});

// Construct structured data for the blog post (JSON-LD)
const postStructuredData: {
	"@context": string;
	"@type": string;
	headline: string;
	description: string;
	datePublished: string;
	author: {
		"@type": string;
		name: string;
	};
	publisher: {
		"@type": string;
		name: string;
		url: string;
	};
	keywords: string;
	image?: string;
} = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	headline: title,
	description: description,
	datePublished: pubDate,
	author: {
		"@type": "Person",
		name: author,
	},
	publisher: {
		"@type": "Person",
		name: "Fitra",
		url: "https://yourwebsite.com",
	},
	keywords: tags.join(", "),
};

// If there's a blog post image, add it to the structured data
if (image) {
	postStructuredData.image = new URL(image, Astro.url).toString();
}
---

<style>
  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .post-header {
    margin-bottom: 2.5rem;
  }

  .post-title {
    margin-bottom: 0.5rem;
  }

  .post-meta {
    color: var(--color-text-light);
    margin-bottom: 1rem;
    font-size: 0.9rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    align-items: center;
  }

  .post-author {
    margin-right: 0.5rem;
  }

  .post-meta-separator {
    color: var(--color-text-light);
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .post-tag {
    background-color: #333;
    color: #fff;
    padding: 0.25rem 0.75rem;
    border-radius: 100px;
    font-size: 0.8rem;
  }

  .post-image {
    width: 100%;
    max-height: 400px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 2rem;
  }

  .post-content {
    line-height: 1.8;
  }

  .post-content h2,
  .post-content h3 {
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .post-content p {
    margin-bottom: 1.5rem;
  }

  .post-content a {
    color: #4a9ae1;
    text-decoration: underline;
  }

  .post-content blockquote {
    border-left: 4px solid #555;
    padding-left: 1rem;
    color: var(--color-text-light);
    margin: 1.5rem 0;
  }

  @media (max-width: 768px) {
    .blog-post {
      padding: 1rem;
    }
  }
</style>

<BaseLayout
  pageTitle={title}
  metaDescription={description}
  metaKeywords={tags.join(", ")}
  ogImage={image}
  ogType="article"
>
  <article class="blog-post">
    <header class="post-header">
      <h1 class="post-title text-gradient">{title}</h1>
      <div class="post-meta">
        <span class="post-author">By {author}</span>
        <span class="post-meta-separator">•</span>
        <time datetime={pubDate}>{formattedDate}</time>
        {minutesRead && (
          <>
            <span class="post-meta-separator">•</span>
            <span class="post-reading-time">{minutesRead} min read</span>
          </>
        )}
      </div>
      {tags.length > 0 && (
        <div class="post-tags">
          {tags.map((tag: string) => (
            <span class="post-tag">{tag}</span>
          ))}
        </div>
      )}
    </header>

    {image && <img class="post-image" src={image} alt={title} />}

    <div class="post-content">
      <slot />
    </div>
  </article>

  {/* Add JSON-LD structured data */}
  <script type="application/ld+json" set:html={JSON.stringify(postStructuredData)} />
</BaseLayout> 